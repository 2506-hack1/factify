name: ⚡ Ultra-Fast Feedback

# 開発時の超高速フィードバック用ワークフロー
# プルリクエスト時の必要最小限チェック（30秒以内）

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  PYTHON_VERSION: '3.9'
  NODE_VERSION: '22'

jobs:
  # 🔍 変更検出（高速版）
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api-changed: ${{ steps.changes.outputs.api }}
      infra-changed: ${{ steps.changes.outputs.infra }}
      webapp-changed: ${{ steps.changes.outputs.webapp }}
      docs-only: ${{ steps.changes.outputs.docs-only }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            api:
              - 'api/**'
              - '!api/README.md'
              - '!api/**/*.md'
            infra:
              - 'infra/**'
              - '!infra/README.md'
              - '!infra/**/*.md'
            webapp:
              - 'webapp/**'
              - '!webapp/README.md'
              - '!webapp/**/*.md'
            docs-only:
              - '**/*.md'
              - 'README.md'

  # ⚡ 超軽量チェック（エラーのみ）
  quick-check:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.docs-only != 'true'

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🐍 Quick Python syntax check
        if: needs.detect-changes.outputs.api-changed == 'true'
        run: |
          python3 -m py_compile api/main.py || echo "⚠️ Syntax error in main.py"
          python3 -m py_compile api/src/*.py || echo "⚠️ Syntax errors in src/"

      - name: 📦 Quick JS/TS syntax check
        if: needs.detect-changes.outputs.webapp-changed == 'true'
        run: |
          cd webapp
          # TypeScriptコンパイルチェックのみ（依存関係インストールなし）
          npx tsc --noEmit --skipLibCheck || echo "⚠️ TypeScript syntax errors"

  # 🧪 最小限テスト（重要な関数のみ）
  critical-tests:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.api-changed == 'true'

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🧪 Quick import test
        run: |
          cd api
          python3 -c "
          try:
              import main
              print('✅ Main module imports successfully')
          except Exception as e:
              print(f'❌ Import error: {e}')
              exit(1)
          " || echo "⚠️ Import test failed"

  # 🏗️ CDK構文チェック（最小限）
  cdk-quick-check:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.infra-changed == 'true'

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🔍 Python syntax check for CDK
        run: |
          cd infra
          python3 -m py_compile app.py || echo "⚠️ CDK app.py syntax error"
          python3 -m py_compile infra/*.py || echo "⚠️ CDK stack syntax errors"

  # 📊 超高速サマリー
  ultra-fast-summary:
    runs-on: ubuntu-latest
    needs: [detect-changes, quick-check, critical-tests, cdk-quick-check]
    if: always()

    steps:
      - name: ⚡ Generate ultra-fast summary
        run: |
          echo "## ⚡ Ultra-Fast Feedback (< 30 seconds)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.detect-changes.outputs.docs-only }}" = "true" ]; then
            echo "📝 **Documentation only** - All good! 🎉" >> $GITHUB_STEP_SUMMARY
          else
            echo "### 🔍 Changes" >> $GITHUB_STEP_SUMMARY
            echo "- API: ${{ needs.detect-changes.outputs.api-changed == 'true' && '✅' || '⏭️' }}" >> $GITHUB_STEP_SUMMARY
            echo "- Infra: ${{ needs.detect-changes.outputs.infra-changed == 'true' && '✅' || '⏭️' }}" >> $GITHUB_STEP_SUMMARY
            echo "- Webapp: ${{ needs.detect-changes.outputs.webapp-changed == 'true' && '✅' || '⏭️' }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            echo "### ⚡ Quick Checks" >> $GITHUB_STEP_SUMMARY
            echo "- Syntax: ${{ needs.quick-check.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
            echo "- Imports: ${{ needs.critical-tests.result == 'success' && '✅' || needs.critical-tests.result == 'skipped' && '⏭️' || '❌' }}" >> $GITHUB_STEP_SUMMARY
            echo "- CDK: ${{ needs.cdk-quick-check.result == 'success' && '✅' || needs.cdk-quick-check.result == 'skipped' && '⏭️' || '❌' }}" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Ready for full CI/CD pipeline!**" >> $GITHUB_STEP_SUMMARY
